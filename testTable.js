// import {omit} from "lodash";
const { omit, groupBy } = require('lodash');
const faker = require('faker');
const fs = require('fs');

const structure = {
  "structure": [{"id": "H1E0150", "name": "Кластер", "isDimension": true, "clickable": false}, {
    "id": "H1E0148",
    "name": "Чаптер",
    "isDimension": true,
    "clickable": false
  }, {
    "id": "Текучесть",
    "name": "Текучесть",
    "measure": "%",
    "isDimension": false,
    "clickable": true,
    "deltaColumn": false
  }, {
    "id": "Факт.ч.",
    "name": "Фактическая численность",
    "measure": "сотр.",
    "isDimension": false,
    "clickable": true,
    "deltaColumn": true,
    "positiveDelta": true
  }, {
    "id": "Укомлект.",
    "name": "Укомплектованность",
    "measure": "%",
    "isDimension": false,
    "clickable": true,
    "deltaColumn": false
  }, {
    "id": "Увол.в тек.",
    "name": "Уволенных в текучесть",
    "measure": "сотр.",
    "isDimension": false,
    "clickable": true,
    "deltaColumn": false
  }, {
    "id": "Вакансии",
    "name": "Вакансии",
    "measure": "шт.ед.",
    "isDimension": false,
    "clickable": true,
    "deltaColumn": false
  }],
  "references": {
    "H1E0150": {
      "60900240": "Digital Lab",
      "60900241": "GR & Транспорт",
      "60900242": "IT Back",
      "60900243": "IT Front",
      "60900244": "IT&Ops Support",
      "60900245": "Process management",
      "60900246": "Дебетовые Карты Продукт",
      "60900247": "Дебетовые Карты Сервисы",
      "60900248": "Дебетовые карты. Управление портфелем",
      "60900249": "Зарплатный продукт",
      "60903025": "Процессинг ППРБ",
      "60903026": "Управление эффективностью дивизиона",
      "60903027": "Эквайринг. Продукты и процессы",
      "60903028": "Эквайринг Продукт",
      "60903029": "Эквайринг Сервисы",
      "60903030": "Эквайринг  Sales",
      "60915618": "Программа лояльности",
      "#": "Не присвоено Кластеру"
    }, "H1E0148": {
      "60768759": "Acquiring_Product_(Offline&Online)",
      "60768761": "[ACQ] Merchant Acquiring [Product]",
      "60772860": "Комп. Див Эквайринг и банк. карты",
      "60773022": "[RUN] CTO Card Solutions",
      "60773023": "Debit_Cards&Acquiring_Methodology",
      "60773024": "[RUN] Division management",
      "60773025": "Division_Performance_Management",
      "60773079": "Self_service_and_business_process",
      "60773117": "Debit_Cards_Services",
      "60773135": "Digital_Products&Expertise_Lab",
      "60773141": "GR_and_transport_solutions",
      "60773211": "PMO-РБ",
      "60773215": "Processing_System_Development",
      "60773262": "АО Центр программ Лояльности",
      "60853744": "Acquiring_servises",
      "60854023": "Debit Cards_Product Portfolio",
      "60872433": "Payroll",
      "60884814": "Debit_Cards_Product",
      "60884815": "IT&Ops_Support",
      "60885345": "PMO-ДИТ FrontEnd",
      "60885391": "Портальные сервисы",
      "60885434": "Field_sales_management",
      "60885459": "Эквайринг и банковские карты (Соколов)",
      "60885463": "Эквайринг и банковские карты (Соколов)",
      "60885464": "Нагрузочное тестирование",
      "60895202": "Legacy Процессинг хаб",
      "60895203": "Legacy Процессинг ядро",
      "60895204": "PMO-Processing",
      "60895205": "Администрирование тестовых сред",
      "60895206": "Дежурная смена CS",
      "60895207": "ППРБ. Процессинг",
      "60895208": "ППРБ.Эквайринг/ЗП",
      "60895209": "Штаб_Соколов Д.Ю.",
      "60895210": "Delivery Leads",
      "60895211": "POS",
      "60895212": "АС Сервисы в ФС/ФП Пластиковые карты",
      "60895213": "Сервисы для ЮЛ",
      "60895214": "Удаленные каналы обслуживания",
      "60895215": "Legacy Процессинг Back-Office",
      "60900259": "Развитие бэкофисных депозитных продукто",
      "60910821": "Неразмеченные Рокотян",
      "60956317": "МЦТП",
      "#": "Не присвоено Чаптеру"
    }
  },
  "rawData": "Общий результат|Результат|4.18|1439|89.75|52|163.85$$$60900240|Результат|3.47|59|89.39|2|7$$$|60773023|0|1|100|0|0$$$|60895210|0|0|0|0|0$$$|60773135|19.65|9|75|2|3$$$|60895203|0|2|66.67|0|1$$$|60885345|0|0|0|0|0$$$|60895212|0|0|0|0|0$$$|60910821|0|0|0|0|0$$$|60895207|0|1|100|0|0$$$|60900259|0|0|0|0|0$$$|60895213|0|0|0|0|0$$$|60895214|0|46|93.88|0|3$$$|#|0|0|0|0|0$$$60900241|Результат|17.63|6|100|1|0$$$|60773023|200|1|100|1|0$$$|60773141|0|5|100|0|0$$$60900242|Результат|4.22|341|86.73|13|52$$$|60895215|2.51|43|89.58|1|5$$$|60895202|4.76|90|90|3|10$$$|60895203|3.08|111|92.86|3|8.5$$$|60895204|0|0|0|0|0$$$|60895211|0|0|0|0|0$$$|60895205|4.76|22|73.33|1|8$$$|60895206|4.95|20|81.25|1|4.5$$$|60885464|11.69|15|75|2|5$$$|60895207|0|12|85.71|0|2$$$|60895208|0|5|83.33|0|1$$$|60895209|10.33|14|66.67|2|7$$$|60885463|0|9|90|0|1$$$|#|0|0|0|0|0$$$60900243|Результат|2.3|57|78.08|1|16$$$|60773211|0|0|0|0|2$$$|60895211|0|1|50|0|1$$$|60895205|0|0|0|0|1$$$|60895212|3.81|33|91.67|1|3$$$|60885464|0|3|75|0|1$$$|60895214|0|0|0|0|6$$$|60885459|0|20|90.91|0|2$$$|#|0|0|0|0|0$$$60900244|Результат|4.11|23|88.46|1|3$$$|60768761|0|0|0|0|0$$$|60884815|13.03|9|90|1|1$$$|60895202|0|9|90|0|1$$$|60895203|0|5|83.33|0|1$$$|60895204|0|0|0|0|0$$$|60885345|0|0|0|0|0$$$|60895209|0|0|0|0|0$$$|#|0|0|0|0|0$$$60900245|Результат|5.51|40|80.31|2|9.65$$$|60895210|0|6|89.17|0|0.65$$$|60895204|0|0|0|0|0$$$|60885345|0|0|0|0|0$$$|60773211|5.3|22|95.65|1|1$$$|60885391|0|2|100|0|0$$$|60895213|0|0|100|0|0$$$|60895214|21.81|9|52.94|1|8$$$|60885459|0|1|100|0|0$$$|#|0|0|100|0|0$$$60900246|Результат|19.49|33|94.29|6|2$$$|60884814|5.12|21|100|1|0$$$|60773023|0|1|100|0|0$$$|60895210|0|0|0|0|0$$$|60895203|0|5|100|0|0$$$|60910821|0|0|0|0|0$$$|60895213|90.48|4|66.67|4|2$$$|60895214|79.94|2|100|1|0$$$60900247|Результат|6.27|103|91.15|6|10$$$|60884814|0|0|0|0|0$$$|60773117|0|16|94.12|0|1$$$|60773023|0|1|100|0|0$$$|60895210|0|0|0|0|0$$$|60895215|0|1|100|0|0$$$|60895203|11.93|38|86.36|4|6$$$|60885345|0|0|0|0|0$$$|60895214|5.6|45|93.75|2|3$$$|60885459|0|0|0|0|0$$$|#|0|2|100|0|0$$$60900248|Результат|10.9|10|83.33|1|2$$$|60854023|10.9|10|83.33|1|2$$$60900249|Результат|5.93|92|91.5|5|8.5$$$|60773022|0|0|0|0|0$$$|60773023|0|4|100|0|0$$$|60895203|0|0|0|0|0$$$|60872433|13.1|16|100|2|0$$$|60895208|6.42|58|88.46|3|7.5$$$|60895213|0|5|83.33|0|1$$$|60895214|0|7|100|0|0$$$|60895209|0|0|0|0|0$$$|#|0|2|100|0|0$$$60915618|Результат|1.17|196|98.99|2|2$$$|60773262|0|49|100|0|0$$$|60773211|0|1|100|0|0$$$|60895208|4.52|27|93.1|1|2$$$|60895214|22.62|9|100|1|0$$$|60895209|0|0|0|0|0$$$|#|0|110|100|0|0$$$60903025|Результат|0|64|94.12|0|4$$$|60773215|0|6|100|0|0$$$|60895207|0|57|93.44|0|4$$$|60895208|0|1|100|0|0$$$|60895214|0|0|0|0|0$$$|60895209|0|0|0|0|0$$$|#|0|0|0|0|0$$$60903026|Результат|0|9|84.55|0|1.7$$$|60773025|0|9|84.55|0|1.7$$$60903030|Результат|0|30|100|0|0$$$|60885434|0|16|100|0|0$$$|60956317|0|3|100|0|0$$$|60885391|0|10|100|0|0$$$|#|0|1|100|0|0$$$60903028|Результат|0|0|0|0|0$$$|60768761|0|0|0|0|0$$$|60768759|0|0|0|0|0$$$|60853744|0|0|0|0|0$$$|60773023|0|0|0|0|0$$$|60885434|0|0|0|0|0$$$|60895211|0|0|0|0|0$$$|60885391|0|0|0|0|0$$$|60895214|0|0|0|0|0$$$|#|0|0|0|0|0$$$60903029|Результат|5.6|202|85.53|7|34$$$|60853744|4.66|21|95.45|1|1$$$|60884815|0|0|0|0|1$$$|60895211|5.17|18|85.71|1|3$$$|60895212|0|0|0|0|1$$$|60956317|3.26|144|86.67|2|22$$$|60885391|0|0|0|0|0$$$|60895207|598.8|0|0|1|2$$$|60895208|21.22|10|71.43|2|4$$$|60895214|0|2|100|0|0$$$|60895209|0|0|0|0|0$$$|60885459|0|5|100|0|0$$$|#|0|2|100|0|0$$$60903027|Результат|3.33|154|95.03|4|8$$$|60768761|5.1|35|92.11|1|3$$$|60768759|0|0|0|0|0$$$|60853744|0|1|100|0|0$$$|60773023|0|2|100|0|0$$$|60895210|0|0|0|0|0$$$|60885434|0|11|100|0|0$$$|60773141|0|1|100|0|0$$$|60895211|3.5|38|94.87|1|2$$$|60773079|0|0|0|0|0$$$|60895212|0|1|100|0|0$$$|60885391|15.77|6|85.71|1|1$$$|60895208|6.89|17|94.44|1|1$$$|60895213|0|19|95|0|1$$$|60895214|0|20|100|0|0$$$|60885459|0|1|100|0|0$$$|#|0|2|100|0|0$$$#|Результат|3.12|20|83.33|1|4$$$|60768761|0|0|0|0|0$$$|60773022|0|0|0|0|0$$$|60773024|0|2|66.67|0|1$$$|60853744|0|0|0|0|0$$$|60884814|0|0|0|0|0$$$|60773117|0|2|100|0|0$$$|60773211|0|1|100|0|0$$$|60895205|0|0|0|0|0$$$|60772860|0|13|86.67|0|2$$$|60910821|0|0|0|0|0$$$|60885463|0|1|100|0|0$$$|60885459|0|1|100|0|0$$$|#|15.16|0|0|1|1"
}
handleTableData = (tableData) => {
  const {references, structure} = tableData;
  const dimensions = structure.filter(item => item.isDimension).map(item => item.id);

  const raw = tableData.rawData.split('$$$');

  const [firstRaw, ...restRaw] = raw;

  const result = [];
  const map = [];
  let mapIds = [];
  let mapPath = [];

  restRaw.forEach((row) => {
    const data = parseRow(row, structure, references);
    const groupLevel = dimensions
      .map(dim => data[dim])
      .findIndex(item => item !== undefined);

    const currentDimension = dimensions[groupLevel];
    const value = data[currentDimension];
    mapIds = mapIds.slice(0, groupLevel);
    mapPath = mapPath.slice(0, groupLevel);

    mapIds.push(`${currentDimension}-${data.id}`);
    mapPath.push(value);

    const item = {
      title: value,
      ...omit(data, dimensions),
      url: mapIds,
      path: mapPath.slice(0, -1),
    };


    const isFirstLevel = groupLevel === 0;
    const isLastLevel = groupLevel === dimensions.length - 1;

    if (!isLastLevel) {
      item.children = [];
      map[groupLevel] = item;
    }

    const parent = isFirstLevel ? result : map[groupLevel - 1].children;

    parent.push(item);
  });

  return {
    first: {
      url: `${structure[0].id}-0`,
      ...parseRow(firstRaw, structure, references),
    },
    rows: result,
    structure,
  };
};

const parseRow = (data, structure, references) => {
  const cells = data.split('|');

  const rowData = {};
  structure.forEach((item, i) => {
    let value;
    const key = item.id;
    if (item.isDimension) {
      const id = cells[i];
      if (id && id !== 'Результат' && id !== 'Общий результат') {
        rowData.id = id;
      }

      value = references[key][id];
    } else {
      value = parseFloat(cells[i]);
    }

    if (value != null) {
      rowData[key] = value;
    }
  });

  return rowData;
};

const childArr = (row) => new Array(row['Факт.ч.'])
  .fill(0, 0, row['Факт.ч.'])
  .map(() => ({
    name: faker.name.findName(),
    fullname: faker.name.findName(),
    role: faker.random.arrayElement(["PO","CJE","Designer","Tester","Team Member"]),
    size: 1
  }))

const data = handleTableData(structure).rows.map(row => ({
  name: row.title,
  shortName: row.title,
  size: row['Факт.ч.'],
  value: row['Факт.ч.'],
  off: true,
  children: row.children.map(subrow => ({
    name: subrow.title,
    shortName: subrow.title,
    size: subrow['Факт.ч.'],
    value: subrow['Факт.ч.'],
    off: true,
    children: Object.entries(groupBy(childArr(subrow), 'role')).map(entry => ({
      name: entry[0],
      shortName: entry[0],
      children: entry[1],
      size: entry[1].length,
      value: entry[1].length,
      off: true,
    }))
  }))
}));

fs.writeFile('myjsonfile2.json', JSON.stringify(data), 'utf8', (err, res) => {
  console.log(res)
});
